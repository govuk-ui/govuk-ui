{"version":3,"file":"DateInput-4b08d3af.js","sources":["../../src/components/DateInput/DateInput.tsx"],"sourcesContent":["import React, {Children, cloneElement, isValidElement} from \"react\";\nimport DateInputProps from \"./DateInput.types\";\nimport FormGroup from \"../../layout/FormGroup\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport Input from \"../Input\";\nimport Label from \"../Label\";\nimport Fieldset from \"../../layout/Fieldset\";\nimport Legend from \"../../layout/Legend\";\nimport Hint from \"../Hint\";\nimport Typography from \"../../typography/Typography\";\n\nexport const DateInput = ({\n  id,\n  name,\n  classes,\n  dayLabel,\n  monthLabel,\n  yearLabel,\n  errorMessage,\n  children,\n  value,\n  ...attributes\n}: DateInputProps) => {\n\n  if (!id && name) {\n    id = name;\n  } else if (!name && id) {\n    name = id;\n  }\n\n  let errorMessageComponent;\n  let describedByValue = '';\n\n  if (errorMessage) {\n    const errorId = id ? `${id}-error` : '';\n    describedByValue += ` ${errorId}`;\n    errorMessageComponent = <ErrorMessage id={errorId}>{errorMessage}</ErrorMessage>;\n  }\n\n  const arrayChildren: any = Children.toArray(children);\n\n  { Children.map(arrayChildren, (child:any, _index) => {\n    if (isValidElement(child) && (child.type === Hint)) {\n      describedByValue += ` ${id}-hint`;\n    }\n  })}\n\n  return (\n    <FormGroup error={errorMessage}>\n      <Fieldset role=\"group\" describedBy={describedByValue}>\n        { Children.map(arrayChildren, (child:any, _index) => {\n          if (isValidElement(child) && (child.type === Legend || child.type === Hint || child.type === Typography)) {\n            return (\n                <>\n                  {\n                    cloneElement(child as React.ReactElement<any>, {})\n                  }\n                </>\n            );\n          }\n        })}\n        { errorMessageComponent }\n        <div className={`govuk-date-input ${classes || ''}`} id={id} {...attributes}>\n          <div className=\"govuk-date-input__item\">\n            <Input\n              classes=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n              id={`${id}-day`}\n              name={`${name}-day`}\n              type=\"text\"\n              inputmode=\"numeric\"\n              value={value ? value[`${id}-day`] : null}\n            >\n              <Label>\n                {dayLabel || 'Day'}\n              </Label>\n            </Input>\n          </div>\n\n          <div className=\"govuk-date-input__item\">\n            <Input\n              classes=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n              id={`${id}-month`}\n              name={`${name}-month`}\n              type=\"text\"\n              inputmode=\"numeric\"\n              value={value ? value[`${id}-month`] : null}\n            >\n              <Label>\n                {monthLabel || 'Month'}\n              </Label>\n            </Input>\n          </div>\n\n          <div className=\"govuk-date-input__item\">\n            <Input\n              classes=\"govuk-input govuk-date-input__input govuk-input--width-4\"\n              id={`${id}-year`}\n              name={`${name}-year`}\n              type=\"text\"\n              inputmode=\"numeric\"\n              value={value ? value[`${id}-year`] : null}\n            >\n              <Label>\n                {yearLabel || 'Year'}\n              </Label>\n            </Input>\n          </div>\n        </div>\n      </Fieldset>\n    </FormGroup>\n  );\n};\n\nexport default DateInput;\n"],"names":["DateInput","id","name","classes","dayLabel","monthLabel","yearLabel","errorMessage","children","value","attributes","errorMessageComponent","describedByValue","errorId","jsx","ErrorMessage","arrayChildren","Children","child","_index","isValidElement","Hint","FormGroup","jsxs","Fieldset","Legend","Typography","Fragment","cloneElement","Input","Label"],"mappings":"ubAWO,MAAAA,EAAA,CAAA,CAAmB,GAAAC,EACxB,KAAAC,EACA,QAAAC,EACA,SAAAC,EACA,WAAAC,EACA,UAAAC,EACA,aAAAC,EACA,SAAAC,EACA,MAAAC,EACA,GAAAC,CAEF,IAAA,CAEE,CAAAT,GAAAC,EACED,EAAAC,EAAK,CAAAA,GAAAD,IAELC,EAAAD,GAGF,IAAAU,EACAC,EAAA,GAEA,GAAAL,EAAA,CACE,MAAAM,EAAAZ,EAAA,GAAAA,UAAA,GACAW,GAAA,IAAAC,IACAF,EAAAG,EAAAC,EAAA,CAAA,GAAAF,EAAA,SAAAN,CAAA,CAAA,CAAiE,CAGnE,MAAAS,EAAAC,EAAAA,SAAA,QAAAT,CAAA,EAEES,OAAAA,EAAAA,SAAA,IAAAD,EAAA,CAAAE,EAAAC,IAAA,CACAC,EAAA,eAAAF,CAAA,GAAAA,EAAA,OAAAG,IACET,GAAA,IAAAX,SACF,CAAA,EAGFa,EAAAQ,EAAA,CAAA,MAAAf,EAAA,SAAAgB,EAAAC,EAAA,CAAA,KAAA,QAAA,YAAAZ,EAAA,SAAA,CAGQK,EAAAA,SAAA,IAAAD,EAAA,CAAAE,EAAAC,IAAA,CACA,GAAAC,EAAA,eAAAF,CAAA,IAAAA,EAAA,OAAAO,GAAAP,EAAA,OAAAG,GAAAH,EAAA,OAAAQ,GACE,OAAAZ,EAAAa,EAAA,CAAA,SAAAC,EAAA,aAAAV,EAAA,CAAA,CAAA,CAAA,CAAA,CAOF,CAAA,EACDP,EACCY,EAAA,MAAA,CAAA,UAAA,oBAAApB,GAAA,KAAA,GAAAF,EAAA,GAAAS,EAAA,SAAA,CAEAI,EAAA,MAAA,CAAA,UAAA,yBAAA,SAAAA,EACEe,EAAC,CAAA,QAAA,2DACS,GAAA,GAAA5B,QACD,KAAA,GAAAC,QACE,KAAA,OACJ,UAAA,UACK,MAAAO,EAAAA,EAAA,GAAAR,OAAA,EAAA,KAC0B,SAAAa,EAAAgB,EAAA,CAAA,SAAA1B,GAAA,MAAA,CAIpC,CAAA,EAAA,EAEJU,EAAA,MAAA,CAAA,UAAA,yBAAA,SAAAA,EAGEe,EAAC,CAAA,QAAA,2DACS,GAAA,GAAA5B,UACD,KAAA,GAAAC,UACE,KAAA,OACJ,UAAA,UACK,MAAAO,EAAAA,EAAA,GAAAR,SAAA,EAAA,KAC4B,SAAAa,EAAAgB,EAAA,CAAA,SAAAzB,GAAA,QAAA,CAItC,CAAA,EAAA,EAEJS,EAAA,MAAA,CAAA,UAAA,yBAAA,SAAAA,EAGEe,EAAC,CAAA,QAAA,2DACS,GAAA,GAAA5B,SACD,KAAA,GAAAC,SACE,KAAA,OACJ,UAAA,UACK,MAAAO,EAAAA,EAAA,GAAAR,QAAA,EAAA,KAC2B,SAAAa,EAAAgB,EAAA,CAAA,SAAAxB,GAAA,OAAA,CAIrC,CAAA,EAAA,CAEJ,EAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAIR"}