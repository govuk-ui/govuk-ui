{"version":3,"file":"Legend-3f30edf0.js","sources":["../../src/components/Input/Input.tsx","../../src/layout/Legend/Legend.tsx"],"sourcesContent":["import React, {Children, cloneElement, isValidElement} from \"react\";\nimport InputProps from \"./Input.types\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport FormGroup from \"../../layout/FormGroup\";\nimport Hint from \"../Hint\";\nimport Label from \"../Label\";\n\nexport const Input = ({\n  id,\n  name,\n  errorMessage,\n  classes,\n  type,\n  value,\n  describedBy,\n  autocomplete,\n  inputmode,\n  prefix,\n  suffix,\n  attributes,\n  children,\n}: InputProps) => {\n\n  if (!id && name) {\n    id = name;\n  } else if (!name && id) {\n    name = id;\n  }\n\n  let describedByValue = describedBy || '';\n  let errorMessageComponent;\n\n  if (errorMessage) {\n    const errorId = id ? `${id}-error` : '';\n    describedByValue += ` ${errorId}`;\n    errorMessageComponent = <ErrorMessage id={errorId}>{errorMessage}</ErrorMessage>;\n  }\n\n  const arrayChildren: any = Children.toArray(children);\n\n  const PrefixSuffixWrapper = ({children}: any) => {\n    if (prefix || suffix) {\n      return (\n        <>\n          <div className=\"govuk-input__wrapper\">\n            { prefix && (\n              <div className=\"govuk-input__prefix\">\n                {prefix}\n              </div>\n            )}\n            {children}\n            { suffix && (\n              <div className=\"govuk-input__suffix\">\n                {suffix}\n              </div>\n            )}\n          </div>\n        </>\n      )\n    }\n    else return children;\n  };\n\n\n  return (\n    <>\n      <FormGroup error={errorMessage}>\n        { Children.map(arrayChildren, (child:any, _index) => {\n          if (isValidElement(child) && (child.type === Label)) {\n            return (\n              <>\n                {\n                  cloneElement(child as React.ReactElement<any>, {\n                    htmlFor: id\n                  })\n                }\n              </>\n            );\n          }\n          if (isValidElement(child) && (child.type === Hint)) {\n            describedByValue += ` ${id}-hint`;\n            return (\n              <>\n                {\n                  cloneElement(child as React.ReactElement<any>, { id: `${id}-hint` })\n                }\n              </>\n            );\n          }\n        })}\n        {errorMessageComponent}\n        <PrefixSuffixWrapper>\n          <input\n            className={`govuk-input ${classes || ''} ${errorMessage ? ' govuk-input--error' : ''}`}\n            id={id}\n            name={name}\n            type={type}\n            defaultValue={value}\n            aria-describedby={describedByValue || ''}\n            autoComplete={autocomplete}\n            inputMode={inputmode}\n          />\n        </PrefixSuffixWrapper>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport LegendProps from \"./Legend.types\";\n\nexport const Legend = ({\n  children,\n  classes,\n  ...attributes\n}: LegendProps) => {\n  return (\n    <legend\n      className={`govuk-fieldset__legend ${classes || ''}`}\n      { ...attributes }\n    >\n      {children}\n    </legend>\n  );\n};\n\nexport default Legend;\n"],"names":["Input","id","name","errorMessage","classes","type","value","describedBy","autocomplete","inputmode","prefix","suffix","attributes","children","describedByValue","errorMessageComponent","errorId","jsx","ErrorMessage","arrayChildren","Children","PrefixSuffixWrapper","children2","Fragment","jsxs","FormGroup","child","_index","isValidElement","Label","cloneElement","Hint","Legend"],"mappings":"8QAOO,MAAAA,EAAA,CAAA,CAAe,GAAAC,EACpB,KAAAC,EACA,aAAAC,EACA,QAAAC,EACA,KAAAC,EACA,MAAAC,EACA,YAAAC,EACA,aAAAC,EACA,UAAAC,EACA,OAAAC,EACA,OAAAC,EACA,WAAAC,EACA,SAAAC,CAEF,IAAA,CAEE,CAAAZ,GAAAC,EACED,EAAAC,EAAK,CAAAA,GAAAD,IAELC,EAAAD,GAGF,IAAAa,EAAAP,GAAA,GACAQ,EAEA,GAAAZ,EAAA,CACE,MAAAa,EAAAf,EAAA,GAAAA,UAAA,GACAa,GAAA,IAAAE,IACAD,EAAAE,EAAAC,EAAA,CAAA,GAAAF,EAAA,SAAAb,CAAA,CAAA,CAAiE,CAGnE,MAAAgB,EAAAC,EAAAA,SAAA,QAAAP,CAAA,EAEAQ,EAAA,CAAA,CAAA,SAAAC,CAAA,IACEZ,GAAAC,EACEM,EAAAM,EAAA,CAAA,SAAAC,EAAA,MAAA,CAAA,UAAA,uBAAA,SAAA,CAGQd,GAAAO,EAAA,MAAA,CAAA,UAAA,sBAAA,SAAAP,EAAA,EAGAY,EAEDX,GAAAM,EAAA,MAAA,CAAA,UAAA,sBAAA,SAAAN,EAAA,CAIC,CAAA,CAAA,CAAA,CAAA,EAMLW,EAIP,OAAAL,EAAAM,EAAA,CAAA,SAAAC,EAAAC,EAAA,CAAA,MAAAtB,EAAA,SAAA,CAGQiB,EAAAA,SAAA,IAAAD,EAAA,CAAAO,EAAAC,IAAA,CACA,GAAAC,EAAA,eAAAF,CAAA,GAAAA,EAAA,OAAAG,EACE,OAAAZ,EAAAM,EAAA,CAAA,SAAAO,EAAAA,aAAAJ,EAAA,CAGqD,QAAAzB,CACpC,CAAA,CAAA,CAAA,EAMnB,GAAA2B,EAAA,eAAAF,CAAA,GAAAA,EAAA,OAAAK,EACE,OAAAjB,GAAA,IAAAb,SACAgB,EAAAM,EAAA,CAAA,SAAAO,EAAA,aAAAJ,EAAA,CAAA,GAAA,GAAAzB,QAAA,CAAA,CAAA,CAAA,CAOF,CAAA,EACDc,EACAE,EAAAI,EAAA,CAAA,SAAAJ,EAEC,QAAC,CAAA,UAAA,eAAAb,GAAA,MAAAD,EAAA,sBAAA,KACmF,GAAAF,EAClF,KAAAC,EACA,KAAAG,EACA,aAAAC,EACc,mBAAAQ,GAAA,GACwB,aAAAN,EACxB,UAAAC,CACH,CAAA,EAAA,CAEf,CAAA,CAAA,CAAA,CAAA,CAIR,2lDCvGO,MAAAuB,EAAA,CAAA,CAAgB,SAAAnB,EACrB,QAAAT,EACA,GAAAQ,CAEF,IACEK,EACE,SAAC,CAAA,UAAA,0BAAAb,GAAA,KACiD,GAAAQ,EAC3C,SAAAC,CAEJ,CAAA"}